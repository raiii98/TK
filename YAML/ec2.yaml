AWSTemplateFormatVersion: 2010-09-09
Description: Build a webapp stack with CloudFormation

Resources:
  WebAppInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-002843b0a9e09324a
      InstanceType: t2.micro
      KeyName: !Ref WebAppKeyPair
      SecurityGroupIds:
        - !Ref WebAppSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
            sudo apt update -y
            sudo apt upgrade -y
            sudo apt install -y apache2-utils squid
            wget https://raw.githubusercontent.com/serverok/squid-proxy-installer/master/squid3-install.sh
            sudo bash squid3-install.sh
            sudo mv /etc/squid/squid.conf /etc/squid/squid.conf.original
            sudo touch /etc/squid/squid.conf
            echo "112233" | sudo htpasswd -c -i /etc/squid/passwd tklighting
            cat <<EOF | sudo tee -a /etc/squid/squid.conf
            http_port 2498
            cache deny all
            hierarchy_stoplist cgi-bin ?
            access_log none
            cache_store_log none
            cache_log /dev/null
            refresh_pattern ^ftp: 1440 20% 10080
            refresh_pattern ^gopher: 1440 0% 1440
            refresh_pattern -i (/cgi-bin/|\?) 0 0% 0
            refresh_pattern . 0 20% 4320
            acl localhost src 127.0.0.1/32 ::1
            acl to_localhost dst 127.0.0.0/8 0.0.0.0/32 ::1
            acl SSL_ports port 1-65535
            acl Safe_ports port 1-65535
            acl CONNECT method CONNECT
            acl siteblacklist dstdomain "/etc/squid/blacklist.acl"
            http_access allow manager localhost
            http_access deny manager
            http_access deny !Safe_ports
            http_access deny CONNECT !SSL_ports
            http_access deny siteblacklist
            auth_param basic program /usr/lib/squid3/basic_ncsa_auth /etc/squid/passwd
            auth_param basic children 5
            auth_param basic realm Squid proxy-caching web server
            auth_param basic credentialsttl 2 hours
            acl password proxy_auth REQUIRED
            http_access allow localhost
            http_access allow password
            http_access deny all
            forwarded_for off
            request_header_access Allow allow all
            request_header_access Authorization allow all
            request_header_access WWW-Authenticate allow all
            request_header_access Proxy-Authorization allow all
            request_header_access Proxy-Authenticate allow all
            request_header_access Cache-Control allow all
            request_header_access Content-Encoding allow all
            request_header_access Content-Length allow all
            request_header_access Content-Type allow all
            request_header_access Date allow all
            request_header_access Expires allow all
            request_header_access Host allow all
            request_header_access If-Modified-Since allow all
            request_header_access Last-Modified allow all
            request_header_access Location allow all
            request_header_access Pragma allow all
            request_header_access Accept allow all
            request_header_access Accept-Charset allow all
            request_header_access Accept-Encoding allow all
            request_header_access Accept-Language allow all
            request_header_access Content-Language allow all
            request_header_access Mime-Version allow all
            request_header_access Retry-After allow all
            request_header_access Title allow all
            request_header_access Connection allow all
            request_header_access Proxy-Connection allow all
            request_header_access User-Agent allow all
            request_header_access Cookie allow all
            request_header_access All deny all
          EOF
            sudo service squid restart
  WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join ["-", [webapp-security-group, dev]]
      GroupDescription: "Allow HTTP/HTTPS and SSH inbound and outbound traffic"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 2498
          ToPort: 2498
          CidrIp: 0.0.0.0/0
  WebAppKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: Raiii

Outputs:
  InstancePublicIp:
    Description: The Public IP of the EC2 instance
    Value: !GetAtt WebAppInstance.PublicIp
